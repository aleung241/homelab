services:
  qbittorrent:
    image: hotio/qbittorrent:release-4.6.3
    container_name: qbittorrent
    environment:
      TZ: ${TIMEZONE}
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      WEBUI_PORTS: 8081
    ports:
      - "21014:21014/tcp"
      - "21014:21014/udp"
      - "8081:8081"
    env_file:
      - .env
    volumes:
      - /opt/docker/qbittorrent:/config
      - /server-storage:/data
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=torrent"
      - "homepage.name=qbittorrent"
      - "homepage.description=qBittorrent - main instance"
      - "homepage.icon=qbittorrent.svg"
      - "homepage.weight=1"
      - "homepage.widget.type=qbittorrent"
      - "homepage.widget.url=http://${BASE_URL}:8081"
      - "homepage.widget.username=${QBITTORRENT_USERNAME}"
      - "homepage.widget.password=${QBITTORRENT_PASSWORD}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/qbittorrent
        awslogs-create-group: "true"
    restart: unless-stopped

  qbittorrent-dlc:
    image: hotio/qbittorrent:release-4.3.8.99-202110081405-7423-ac5c264e6
    container_name: qbittorrent-dlc
    environment:
      TZ: ${TIMEZONE}
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      WEBUI_PORTS: 8083
    ports:
      - "47882:47882/tcp"
      - "47882:47882/udp"
      - "8083:8083"
    volumes:
      - /opt/docker/qbittorrent-dlc:/config
      - /server-storage:/data
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=torrent"
      - "homepage.name=qbittorrent-dlc"
      - "homepage.description=qBittorrent - ggn instance"
      - "homepage.icon=qbittorrent.svg"
      - "homepage.weight=2"
      - "homepage.widget.type=qbittorrent"
      - "homepage.widget.url=http://${BASE_URL}:8083"
      - "homepage.widget.username=${QBITTORRENT_USERNAME}"
      - "homepage.widget.password=${QBITTORRENT_PASSWORD}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/qbittorrent-dlc
        awslogs-create-group: "true"
    restart: unless-stopped

  qbittorrent-m:
    image: hotio/qbittorrent:release-4.3.8.99-202110081405-7423-ac5c264e6
    container_name: qbittorrent-m
    environment:
      TZ: ${TIMEZONE}
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      WEBUI_PORTS: 8084
    ports:
      - "46884:46884/tcp"
      - "46884:46884/udp"
      - "8084:8084"
    volumes:
      - /opt/docker/qbittorrent-m:/config
      - /server-storage:/data
    env_file:
      - .env
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=torrent"
      - "homepage.name=qbittorrent-m"
      - "homepage.description=qBittorrent - MyAnonaMouse instance"
      - "homepage.icon=qbittorrent.svg"
      - "homepage.weight=2"
      - "homepage.widget.type=qbittorrent"
      - "homepage.widget.url=http://${BASE_URL}:8084"
      - "homepage.widget.username=${QBITTORRENT_USERNAME}"
      - "homepage.widget.password=${QBITTORRENT_PASSWORD}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/qbittorrent-m
        awslogs-create-group: "true"
    restart: unless-stopped

  qbittorrent-lts:
    image: hotio/qbittorrent:release-4.3.8.99-202110081405-7423-ac5c264e6
    container_name: qbittorrent-lts
    environment:
      TZ: ${TIMEZONE}
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      WEBUI_PORTS: 8085
    ports:
      - "32798:32798/tcp"
      - "32798:32798/udp"
      - "8085:8085"
    volumes:
      - /opt/docker/qbittorrent-lts:/config
      - /server-storage:/data
    env_file:
      - .env
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=torrent"
      - "homepage.name=qbittorrent-lts"
      - "homepage.description=qBittorrent - archival instance"
      - "homepage.icon=qbittorrent.svg"
      - "homepage.weight=2"
      - "homepage.widget.type=qbittorrent"
      - "homepage.widget.url=http://${BASE_URL}:8085"
      - "homepage.widget.username=${QBITTORRENT_USERNAME}"
      - "homepage.widget.password=${QBITTORRENT_PASSWORD}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/qbittorrent-lts
        awslogs-create-group: "true"
    restart: unless-stopped

  qbittorrent-anime:
    image: hotio/qbittorrent:release-4.3.8.99-202110081405-7423-ac5c264e6
    container_name: qbittorrent-anime
    depends_on:
      - wireguard-client
    environment:
      TZ: ${TIMEZONE}
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      WEBUI_PORTS: 8086
    network_mode: service:wireguard-client
    volumes:
      - /opt/docker/qbittorrent-anime:/config
      - /server-storage:/data
    env_file:
      - .env
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=torrent"
      - "homepage.name=qbittorrent-anime"
      - "homepage.description=qBittorrent - anime instance"
      - "homepage.icon=qbittorrent.svg"
      - "homepage.weight=0"
      - "homepage.widget.type=qbittorrent"
      - "homepage.widget.url=http://${BASE_URL}:8086"
      - "homepage.widget.username=${QBITTORRENT_USERNAME}"
      - "homepage.widget.password=${QBITTORRENT_PASSWORD}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/qbittorrent-anime
        awslogs-create-group: "true"
    restart: unless-stopped