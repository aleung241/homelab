services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    environment:
      TZ: ${TIMEZONE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/docker/portainer:/data
    ports:
      - "8100:8000"
      - "9000:9000"
      - "9443:9443"
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=admin"
      - "homepage.name=portainer"
      - "homepage.description=Docker monitoring"
      - "homepage.icon=portainer.svg"
      - "homepage.widget.type=portainer"
      - "homepage.widget.url=https://${BASE_URL}:9443"
      - "homepage.widget.env=2"
      - "homepage.widget.key=${PORTAINER_API_KEY}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/portainer
        awslogs-create-group: "true"
    restart: unless-stopped

  bookstack:
    image: lscr.io/linuxserver/bookstack
    container_name: bookstack
    env_file:
      - .env
    environment:
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      APP_URL: ${BOOKSTACK_URL}
      DB_HOST: bookstack_db
      DB_USER: ${BOOKSTACK_DB_USER}
      DB_PASS: ${BOOKSTACK_DB_PASS}
      DB_DATABASE: ${BOOKSTACK_DB_DATABASE}
    volumes:
      - /opt/docker/bookstack:/config
    ports:
      - "7000:80"
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=admin"
      - "homepage.name=bookstack"
      - "homepage.description=Documentation"
      - "homepage.icon=bookstack.svg"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/bookstack
        awslogs-create-group: "true"
    restart: unless-stopped
    depends_on:
      - bookstack_db

  bookstack_db:
    image: lscr.io/linuxserver/mariadb
    container_name: bookstack_db
    environment:
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      MYSQL_ROOT_PASSWORD: ${BOOKSTACK_DB_PASS}
      TZ: ${TIMEZONE}
      MYSQL_DATABASE: ${BOOKSTACK_DB_DATABASE}
      MYSQL_USER: ${BOOKSTACK_DB_USER}
      MYSQL_PASSWORD: ${BOOKSTACK_DB_PASS}
    volumes:
      - /opt/docker/bookstack-db:/config
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=admin"
      - "homepage.name=bookstack-db"
      - "homepage.description=Bookstack Database"
      - "homepage.icon=mariadb.svg"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/bookstack_db
        awslogs-create-group: "true"
    restart: unless-stopped

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - "3200:3000"
    volumes:
      - /opt/docker/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/homepage
        awslogs-create-group: "true"
    restart: unless-stopped

  home-assistant:
    image: "ghcr.io/home-assistant/home-assistant:stable"
    container_name: home-assistant
    ports:
      - "8123:8123"
    privileged: true
    volumes:
      - /opt/docker/home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/home-assistant
        awslogs-create-group: "true"
    restart: unless-stopped

  changedetection:
    image: ghcr.io/dgtlmoon/changedetection.io:latest
    container_name: changedetection
    environment:
      PLAYWRIGHT_DRIVER_URL: ws://sockpuppetbrowser:3000
      HIDE_REFERER: true
      FETCH_WORKERS: 10
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
    volumes:
      - /opt/docker/changedetection/datastore:/datastore
    ports:
      - "5001:5000"
    depends_on:
      sockpuppetbrowser:
        condition: service_started
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ap-southeast-2
        awslogs-group: /main/changedetection
        awslogs-create-group: "true"
    restart: unless-stopped

  sockpuppetbrowser:
    image: dgtlmoon/sockpuppetbrowser:latest
    container_name: sockpuppetbrowser
    environment:
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1024
      - SCREEN_DEPTH=16
      - MAX_CONCURRENT_CHROME_PROCESSES=10
    cap_add:
      - SYS_ADMIN
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/sockpuppetbrowser
        awslogs-create-group: "true"
    restart: unless-stopped

  hoarder:
    image: ghcr.io/hoarder-app/hoarder:release
    container_name: hoarder
    volumes:
      - /opt/docker/hoarder/data:/data
    ports:
      - "3300:3000"
    env_file:
      - .env
    environment:
      MEILI_ADDR: http://hoarder-meilisearch:7700
      BROWSER_WEB_URL: http://hoarder-chrome:9222
      NEXTAUTH_SECRET: ${HOARDER_NEXTAUTH_SECRET}
      OPENAI_API_KEY: ${HOARDER_OPENAI_API_KEY}
      INFERENCE_CONTEXT_LENGTH: 8192
      DATA_DIR: /data
      MAX_ASSET_SIZE_MB: 100
    restart: unless-stopped

  hoarder-chrome:
    image: gcr.io/zenika-hub/alpine-chrome:123
    container_name: hoarder-chrome
    command:
      - --no-sandbox
      - --disable-gpu
      - --disable-dev-shm-usage
      - --remote-debugging-address=0.0.0.0
      - --remote-debugging-port=9222
      - --hide-scrollbars
    restart: unless-stopped

  hoarder-meilisearch:
    image: getmeili/meilisearch:v1.11.1
    container_name: hoarder-meilisearch
    env_file:
      - .env
    environment:
      MEILI_NO_ANALYTICS: "true"
    volumes:
      - /opt/docker/hoarder-meilisearch:/meili_data
    restart: unless-stopped

  wallos:
    container_name: wallos
    image: bellamy/wallos:latest
    ports:
      - "8282:80/tcp"
    environment:
      TZ: ${TIMEZONE}
    volumes:
      - /opt/docker/wallos/db:/var/www/html/db
      - /opt/docker/wallos/logos:/var/www/html/images/uploads/logos
    restart: unless-stopped

  manyfold:
    image: ghcr.io/manyfold3d/manyfold:latest
    container_name: manyfold
    ports:
      - "3214:3214"
    environment:
      DATABASE_ADAPTER: postgresql
      DATABASE_HOST: manyfold-postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${MANYFOLD_DB_NAME}
      DATABASE_USER: ${MANYFOLD_DB_USER}
      DATABASE_PASSWORD: ${MANYFOLD_DB_PASSWORD}
      SECRET_KEY_BASE: ${MANYFOLD_SECRET_KEY_BASE}
      REDIS_URL: redis://manyfold-redis:6379/1
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
    volumes:
      - /opt/docker/manyfold/libraries:/libraries
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETUID
      - SETGID
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/manyfold
        awslogs-create-group: "true"
    depends_on:
      - manyfold-postgres
      - manyfold-redis
    restart: unless-stopped

  manyfold-postgres:
    image: postgres:15
    container_name: manyfold-postgres
    environment:
      POSTGRES_USER: ${MANYFOLD_DB_USER}
      POSTGRES_PASSWORD: ${MANYFOLD_DB_PASSWORD}
    volumes:
      - /opt/docker/manyfold-postgres/var/lib/postgresql/data:/var/lib/postgresql/data
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/manyfold-postgres
        awslogs-create-group: "true"
    restart: unless-stopped

  manyfold-redis:
    image: redis:7
    container_name: manyfold-redis
    restart: unless-stopped
