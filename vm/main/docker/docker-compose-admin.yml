services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    environment:
      TZ: ${TIMEZONE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/docker/portainer:/data
    ports:
      - "8100:8000"
      - "9000:9000"
      - "9443:9443"
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=admin"
      - "homepage.name=portainer"
      - "homepage.description=Docker monitoring"
      - "homepage.icon=portainer.svg"
      - "homepage.widget.type=portainer"
      - "homepage.widget.url=https://${BASE_URL}:9443"
      - "homepage.widget.env=2"
      - "homepage.widget.key=${PORTAINER_API_KEY}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/portainer
        awslogs-create-group: "true"
    restart: unless-stopped

  bookstack:
    image: lscr.io/linuxserver/bookstack
    container_name: bookstack
    env_file:
      - .env
    environment:
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      APP_URL: ${BOOKSTACK_URL}
      DB_HOST: bookstack_db
      DB_USER: ${BOOKSTACK_DB_USER}
      DB_PASS: ${BOOKSTACK_DB_PASS}
      DB_DATABASE: ${BOOKSTACK_DB_DATABASE}
    volumes:
      - /opt/docker/bookstack:/config
    ports:
      - "7000:80"
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=admin"
      - "homepage.name=bookstack"
      - "homepage.description=Documentation"
      - "homepage.icon=bookstack.svg"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/bookstack
        awslogs-create-group: "true"
    restart: unless-stopped
    depends_on:
      - bookstack_db

  bookstack_db:
    image: lscr.io/linuxserver/mariadb
    container_name: bookstack_db
    environment:
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      MYSQL_ROOT_PASSWORD: ${BOOKSTACK_DB_PASS}
      TZ: ${TIMEZONE}
      MYSQL_DATABASE: ${BOOKSTACK_DB_DATABASE}
      MYSQL_USER: ${BOOKSTACK_DB_USER}
      MYSQL_PASSWORD: ${BOOKSTACK_DB_PASS}
    volumes:
      - /opt/docker/bookstack-db:/config
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
      - "homepage.group=admin"
      - "homepage.name=bookstack-db"
      - "homepage.description=Bookstack Database"
      - "homepage.icon=mariadb.svg"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/bookstack_db
        awslogs-create-group: "true"
    restart: unless-stopped

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - "3200:3000"
    volumes:
      - /opt/docker/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/homepage
        awslogs-create-group: "true"
    restart: unless-stopped

  home-assistant:
    image: "ghcr.io/home-assistant/home-assistant:stable"
    container_name: home-assistant
    ports:
      - "8123:8123"
    privileged: true
    volumes:
      - /opt/docker/home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/home-assistant
        awslogs-create-group: "true"
    restart: unless-stopped
