services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    environment:
      TZ: ${TIMEZONE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/docker/portainer:/data
    ports:
      - "8100:8000"
      - "9000:9000"
      - "9443:9443"
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/portainer
        awslogs-create-group: "true"
    restart: unless-stopped

  bookstack:
    image: lscr.io/linuxserver/bookstack
    container_name: bookstack
    env_file:
      - .env
    environment:
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      APP_URL: ${BOOKSTACK_URL}
      DB_HOST: bookstack_db
      DB_USER: ${BOOKSTACK_DB_USER}
      DB_PASS: ${BOOKSTACK_DB_PASS}
      DB_DATABASE: ${BOOKSTACK_DB_DATABASE}
    volumes:
      - /opt/docker/bookstack:/config
    ports:
      - "7000:80"
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/bookstack
        awslogs-create-group: "true"
    restart: unless-stopped
    depends_on:
      - bookstack_db

  bookstack_db:
    image: lscr.io/linuxserver/mariadb
    container_name: bookstack_db
    environment:
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      MYSQL_ROOT_PASSWORD: ${BOOKSTACK_DB_PASS}
      TZ: ${TIMEZONE}
      MYSQL_DATABASE: ${BOOKSTACK_DB_DATABASE}
      MYSQL_USER: ${BOOKSTACK_DB_USER}
      MYSQL_PASSWORD: ${BOOKSTACK_DB_PASS}
    volumes:
      - /opt/docker/bookstack-db:/config
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/bookstack_db
        awslogs-create-group: "true"
    restart: unless-stopped

  home-assistant:
    image: "ghcr.io/home-assistant/home-assistant:stable"
    container_name: home-assistant
    ports:
      - "8123:8123"
    privileged: true
    volumes:
      - /opt/docker/home-assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/home-assistant
        awslogs-create-group: "true"
    restart: unless-stopped

  changedetection:
    image: ghcr.io/dgtlmoon/changedetection.io:latest
    container_name: changedetection
    environment:
      PLAYWRIGHT_DRIVER_URL: ws://sockpuppetbrowser:3000
      HIDE_REFERER: true
      FETCH_WORKERS: 10
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
    volumes:
      - /opt/docker/changedetection/datastore:/datastore
    ports:
      - "5001:5000"
    depends_on:
      sockpuppetbrowser:
        condition: service_started
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ap-southeast-2
        awslogs-group: /main/changedetection
        awslogs-create-group: "true"
    restart: unless-stopped

  sockpuppetbrowser:
    image: dgtlmoon/sockpuppetbrowser:latest
    container_name: sockpuppetbrowser
    environment:
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1024
      - SCREEN_DEPTH=16
      - MAX_CONCURRENT_CHROME_PROCESSES=10
    cap_add:
      - SYS_ADMIN
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/sockpuppetbrowser
        awslogs-create-group: "true"
    restart: unless-stopped

  karakeep:
    image: ghcr.io/karakeep-app/karakeep:release
    container_name: karakeep
    volumes:
      - /opt/docker/karakeep/data:/data
    ports:
      - "3300:3000"
    env_file:
      - .env
    environment:
      MEILI_ADDR: http://karakeep-meilisearch:7700
      BROWSER_WEB_URL: http://karakeep-chrome:9222
      NEXTAUTH_SECRET: ${KARAKEEP_NEXTAUTH_SECRET}
      OPENAI_API_KEY: ${KARAKEEP_OPENAI_API_KEY}
      INFERENCE_CONTEXT_LENGTH: 8192
      DATA_DIR: /data
      MAX_ASSET_SIZE_MB: 100
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/karakeep
        awslogs-create-group: "true"
    restart: unless-stopped

  karakeep-chrome:
    image: gcr.io/zenika-hub/alpine-chrome:123
    container_name: karakeep-chrome
    command:
      - --no-sandbox
      - --disable-gpu
      - --disable-dev-shm-usage
      - --remote-debugging-address=0.0.0.0
      - --remote-debugging-port=9222
      - --hide-scrollbars
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/karakeep-chrome
        awslogs-create-group: "true"
    restart: unless-stopped

  karakeep-meilisearch:
    image: getmeili/meilisearch:v1.11.1
    container_name: karakeep-meilisearch
    env_file:
      - .env
    environment:
      MEILI_NO_ANALYTICS: "true"
    volumes:
      - /opt/docker/karakeep-meilisearch:/meili_data
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/karakeep-meilisearch
        awslogs-create-group: "true"
    restart: unless-stopped

  pricebuddy:
    build:
      context: .
      dockerfile: docker/php.dockerfile
    image: jez500/pricebuddy:latest
    container_name: pricebuddy
    depends_on:
      - pricebuddy-db
    ports:
      - 5052:80
    volumes:
      - /opt/docker/pricebuddy/storage:/app/storage
      - /opt/docker/pricebuddy/.env:/app/.env
    environment:
      DB_HOST: pricebuddy-db                                  # Name of the database service
      DB_DATABASE: pricebuddy                                 # Should match the MYSQL_DATABASE in the database service
      SCRAPER_BASE_URL: http://pricebuddy-scrapper:3000       # Url to Name of the scrapper service
      AFFILIATE_ENABLED: true                                 # See https://pricebuddy.jez.me/support-project.html
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/pricebuddy
        awslogs-create-group: "true"
    restart: always

  pricebuddy-db:
    image: mysql:8.2
    container_name: pricebuddy-db
    environment:
      MYSQL_DATABASE: pricebuddy
    volumes:
      - /opt/docker/pricebuddy/database:/var/lib/mysql
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/pricebuddy-db
        awslogs-create-group: "true"
    restart: always

  pricebuddy-scrapper:
    image: amerkurev/scrapper:latest
    container_name: pricebuddy-scrapper
    ports:
      - 3030:3000 # Optional, if you want to access the scrapper api from the host machine
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/pricebuddy-scrapper
        awslogs-create-group: "true"
    restart: always

  paperless-ngx-webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless-ngx-webserver
    depends_on:
      - paperless-ngx-db
      - paperless-ngx-broker
      - paperless-ngx-gotenberg
      - paperless-ngx-tika
    env_file:
      - .env
      - .paperless.env
    ports:
      - "3500:8000"
    volumes:
      - /opt/docker/paperless-ngx/data:/usr/src/paperless/data
      - /opt/docker/paperless-ngx/media:/usr/src/paperless/media
      - /opt/docker/paperless-ngx/export:/usr/src/paperless/export
      - /opt/docker/paperless-ngx/consume:/usr/src/paperless/consume
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/paperless-ngx-webserver
        awslogs-create-group: "true"
    restart: always

  paperless-ngx-broker:
    image: docker.io/library/redis:7
    container_name: paperless-ngx-broker
    volumes:
      - /opt/docker/paperless-ngx/redisdata:/data
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/paperless-ngx-broker
        awslogs-create-group: "true"
    restart: unless-stopped

  paperless-ngx-db:
    image: docker.io/library/postgres:17
    container_name: paperless-ngx-db
    environment:
      POSTGRES_DB: ${PAPERLESS_DB}
      POSTGRES_USER: ${PAPERLESS_DB_USER}
      POSTGRES_PASSWORD: ${PAPERLESS_DB_PASSWORD}
    volumes:
      - /opt/docker/paperless-ngx/pgdata:/var/lib/postgresql/data
    labels:
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}"
    logging:
      driver: awslogs
      options:
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-group: /${DEFAULT_BASE_MACHINE}/paperless-ngx-db
        awslogs-create-group: "true"
    restart: unless-stopped

  paperless-ngx-gotenberg:
    image: docker.io/gotenberg/gotenberg:8.19
    container_name: paperless-ngx-gotenberg
    restart: unless-stopped
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  paperless-ngx-tika:
    image: docker.io/apache/tika:latest
    container_name: paperless-ngx-tika
    restart: unless-stopped