version: "3.9"
services:
  plex:
    image: plexinc/pms-docker
    container_name: plex
    environment:
      TZ: ${TIMEZONE}
      PLEX_CLAIM: 
    volumes:
      - /Plex/pms2:/config
      - /transcode/plex2:/transcode
      - /gmedia:/gmedia:ro
      - /gmediac:/gmediac:ro
      - /server-storage:/server-storage:ro
    ports:
      - 33400:32400/tcp
      - 4005:3005/tcp
      - 9324:8324/tcp
      - 33469:32469/tcp
      - 2000:1900/udp
      - 33410:32410/udp
      - 33412:32412/udp
      - 33413:32413/udp
      - 33414:32414/udp
    restart: unless-stopped

  autoscan:
    container_name: autoscan
    image: cr.hotio.dev/hotio/autoscan
    ports:
      - "3030:3030"
    environment:
      TZ: ${TIMEZONE}
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
      UMASK: ${DEFAULT_UMASK}
    volumes:
      - /opt/docker-compose/autoscan:/config
      - /gmediac:/datac:ro
    restart: unless-stopped

  imdbupdatetool:
    image: mynttt/updatetool
    container_name: imdbupdatetool
    environment:
      RUN_EVERY_N_HOURS: 168
      TVDB_API_KEY: ${TVDB_API_KEY}
      TMDB_API_KEY: ${TMDB_API_KEY}
      USE_PLEX_SQLITE_BINARY_FOR_WRITE_ACCESS: "true"
      UNLOCK_FOR_NEW_TV_AGENT: 2;17
    volumes:
      - /Plex/pms:/plexdata
      - /opt/docker-compose/imdbupdatetool:/config
    restart: unless-stopped

  jellyfin:
    image: cr.hotio.dev/hotio/jellyfin
    container_name: jellyfin
    environment:
      TZ: ${TIMEZONE}
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
    volumes:
      - /opt/docker-compose/jellyfin/config:/config
      - /gmediac:/media:ro
    ports:
      - 8096:8096
    restart: unless-stopped

  tautulli:
    image: tautulli/tautulli
    container_name: tautulli
    environment:
      TZ: ${TIMEZONE}
      PUID: ${DEFAULT_USER}
      PGID: ${DEFAULT_GROUP}
    volumes:
      - /opt/docker-compose/tautulli:/config
      - /Plex/pms:/plex
    ports:
      - 8182:8181
    restart: unless-stopped

  portainer_agent:
    image: portainer/agent:latest
    container_name: portainer_agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9001:9001
    restart: unless-stopped